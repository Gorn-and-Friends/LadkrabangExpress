@use "./palette";
@use "./fontTH";
@use "./fontEN";
@use "./light";
@use "./dark";

$transition-time: 0.2s;

$main-color: palette.$main-color;
$color-2: palette.$color-2;
$color-3: palette.$color-3;
$color-4: palette.$color-4;
$color-5: palette.$color-5;

$languages: (
  thai: (
    navigation-font: fontTH.$navigation-font,
    title-font: fontTH.$title-font,
    subtitle-font: fontTH.$subtitle-font,
    body-font: fontTH.$body-font,
  ),
  english: (
    navigation-font: fontEN.$navigation-font,
    title-font: fontEN.$title-font,
    subtitle-font: fontEN.$subtitle-font,
    body-font: fontEN.$body-font,
  ),
);

$themes: (
  light: (
    main-bg-color: light.$main-bg-color,
    bg-color-2: light.$bg-color-2,
    bg-color-3: light.$bg-color-3,
    main-font-color: light.$main-font-color,
    font-color-2: light.$font-color-2,
    font-color-3: light.$font-color-3,
    font-color-4: light.$font-color-4,
  ),
  dark: (
    main-bg-color: dark.$main-bg-color,
    bg-color-2: dark.$bg-color-2,
    bg-color-3: dark.$bg-color-3,
    main-font-color: dark.$main-font-color,
    font-color-2: dark.$font-color-2,
    font-color-3: dark.$font-color-3,
    font-color-4: dark.$font-color-4,
  ),
);

@mixin themify() {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}
